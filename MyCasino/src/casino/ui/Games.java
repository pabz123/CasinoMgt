/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package casino.ui;

import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author PRECIOUS
 */
public class Games extends javax.swing.JFrame {
        Connection con;
    Statement st;
    String cs;
    String user;
    String password;
    String query;

    // For navigation
    private ResultSet rs = null;

    /**
     * Creates new form Games
     */
    public Games() {
        
        con = null;
        st = null;
        cs = "jdbc:mysql://localhost:3306/casino_db";
        user = "root";
        password = "";
        
        initComponents();
        setTitle("Game Arcade");
       
        setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblCustomerId = new javax.swing.JLabel();
        lblAmount = new javax.swing.JLabel();
        lblOutCome = new javax.swing.JLabel();
        lblPayOut = new javax.swing.JLabel();
        btnEnterBet = new javax.swing.JButton();
        btnClearBet = new javax.swing.JButton();
        btnDeleteBet = new javax.swing.JButton();
        btnExitBet = new javax.swing.JButton();
        txtCustomerId = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();
        txtOutCome = new javax.swing.JTextField();
        txtPayOut = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblTableId = new javax.swing.JLabel();
        lblDealerId = new javax.swing.JLabel();
        lblTableCapacity = new javax.swing.JLabel();
        lblLocation = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        btnTableIN = new javax.swing.JButton();
        btnTableOut = new javax.swing.JButton();
        btnTableExit = new javax.swing.JButton();
        txtTableId = new javax.swing.JTextField();
        txtDealerId = new javax.swing.JTextField();
        txtCapacity = new javax.swing.JTextField();
        txtLocation = new javax.swing.JTextField();
        txtStatus = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        lblSlotId = new javax.swing.JLabel();
        lblLocationSlot = new javax.swing.JLabel();
        lblSlotStatus = new javax.swing.JLabel();
        lblMaintenance = new javax.swing.JLabel();
        btnEnterSlot = new javax.swing.JButton();
        btnDeleteSlot = new javax.swing.JButton();
        btnClearSlot = new javax.swing.JButton();
        txtSlotId = new javax.swing.JTextField();
        txtSlotLocation = new javax.swing.JTextField();
        txtSlotStatus = new javax.swing.JTextField();
        txtMaintenanceDate = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        lblLoyaltyId = new javax.swing.JLabel();
        lblTierName = new javax.swing.JLabel();
        lblPoints = new javax.swing.JLabel();
        lblBenefits = new javax.swing.JLabel();
        txtLoyaltyId = new javax.swing.JTextField();
        txtTierName = new javax.swing.JTextField();
        txtPoints = new javax.swing.JTextField();
        txtBenefits = new javax.swing.JTextField();
        btnEnterLoyalty = new javax.swing.JButton();
        btnClearPoints = new javax.swing.JButton();
        btnDeleteLoyalty = new javax.swing.JButton();
        btnExitLoyalty = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        lblRewardName = new javax.swing.JLabel();
        lblDescribeReward = new javax.swing.JLabel();
        lblPointsRequired = new javax.swing.JLabel();
        btnEnterReward = new javax.swing.JButton();
        btnNextReward = new javax.swing.JButton();
        btnDeleteReward = new javax.swing.JButton();
        btnExitRewards = new javax.swing.JButton();
        txtRewardName = new javax.swing.JTextField();
        txtDescription = new javax.swing.JTextField();
        txtPointsRequired = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblGameId = new javax.swing.JLabel();
        lblGameName = new javax.swing.JLabel();
        lblMinBet = new javax.swing.JLabel();
        lblMaxBet = new javax.swing.JLabel();
        btnEnterGame = new javax.swing.JButton();
        btnClearGame = new javax.swing.JButton();
        btnDeleteGame = new javax.swing.JButton();
        btnExitGame = new javax.swing.JButton();
        txtGameId = new javax.swing.JTextField();
        txtGameName = new javax.swing.JTextField();
        txtMinBet = new javax.swing.JTextField();
        txtMaxBet = new javax.swing.JTextField();
        btnHOME = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/icons8-roulette-50.png"))); // NOI18N
        jLabel2.setText("Bets");

        lblCustomerId.setText("customer Id");

        lblAmount.setText("Amount");

        lblOutCome.setText("Out Come");

        lblPayOut.setText("Pay Out");

        btnEnterBet.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEnterBet.setText("Enter");
        btnEnterBet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterBetActionPerformed(evt);
            }
        });

        btnClearBet.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnClearBet.setText("Clear");
        btnClearBet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearBetActionPerformed(evt);
            }
        });

        btnDeleteBet.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteBet.setText("Delete");
        btnDeleteBet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteBetActionPerformed(evt);
            }
        });

        btnExitBet.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnExitBet.setForeground(new java.awt.Color(255, 0, 0));
        btnExitBet.setText("Exit");
        btnExitBet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitBetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAmount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCustomerId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblOutCome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPayOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(80, 80, 80)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCustomerId, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtAmount, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtOutCome, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPayOut, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnEnterBet)
                        .addGap(53, 53, 53)
                        .addComponent(btnClearBet)
                        .addGap(53, 53, 53)
                        .addComponent(btnDeleteBet)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addComponent(btnExitBet)))
                .addGap(49, 49, 49))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(59, 59, 59)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCustomerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCustomerId, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOutCome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOutCome, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPayOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPayOut, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnterBet)
                    .addComponent(btnClearBet)
                    .addComponent(btnDeleteBet)
                    .addComponent(btnExitBet))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Bets", jPanel2);

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/icons8-wheel-of-fortune-80.png"))); // NOI18N
        jLabel3.setText("Casino Tables");

        lblTableId.setText("Table Id");

        lblDealerId.setText("Dealer");

        lblTableCapacity.setText("Capacity");

        lblLocation.setText("Location");

        lblStatus.setText("Status");

        btnTableIN.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTableIN.setText("IN");
        btnTableIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTableINActionPerformed(evt);
            }
        });

        btnTableOut.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTableOut.setText("OUT");
        btnTableOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTableOutActionPerformed(evt);
            }
        });

        btnTableExit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTableExit.setForeground(new java.awt.Color(255, 0, 0));
        btnTableExit.setText("Exit");
        btnTableExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTableExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jLabel3))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(btnTableIN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                        .addComponent(btnTableOut)
                        .addGap(103, 103, 103)
                        .addComponent(btnTableExit))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblTableId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDealerId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTableCapacity, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                            .addComponent(lblLocation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTableId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtCapacity, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtLocation, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                .addComponent(txtDealerId)))))
                .addGap(60, 60, 60))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTableId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTableId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDealerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDealerId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTableCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTableIN)
                    .addComponent(btnTableOut)
                    .addComponent(btnTableExit))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Tables", jPanel3);

        jLabel4.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/slot-machine.png"))); // NOI18N
        jLabel4.setText("Slot Machines");

        lblSlotId.setText("Slot ");

        lblLocationSlot.setText("Location");

        lblSlotStatus.setText("Status");

        lblMaintenance.setText("Maintenance");

        btnEnterSlot.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEnterSlot.setText("Enter");
        btnEnterSlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterSlotActionPerformed(evt);
            }
        });

        btnDeleteSlot.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteSlot.setText("Delete");
        btnDeleteSlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSlotActionPerformed(evt);
            }
        });

        btnClearSlot.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnClearSlot.setText("Clear");
        btnClearSlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearSlotActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnEnterSlot)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE)
                        .addComponent(btnDeleteSlot)
                        .addGap(108, 108, 108)
                        .addComponent(btnClearSlot))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblSlotId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblLocationSlot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSlotStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMaintenance, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                        .addGap(69, 69, 69)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSlotId)
                            .addComponent(txtSlotLocation)
                            .addComponent(txtSlotStatus)
                            .addComponent(txtMaintenanceDate))))
                .addGap(41, 41, 41))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(50, 50, 50)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSlotId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSlotId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLocationSlot, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSlotLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSlotStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSlotStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaintenance, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaintenanceDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnterSlot)
                    .addComponent(btnDeleteSlot)
                    .addComponent(btnClearSlot))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Slot Machines", jPanel4);

        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/icons8-money-50.png"))); // NOI18N
        jLabel5.setText("Loyalty Programs");

        lblLoyaltyId.setText("Loyalty Id");

        lblTierName.setText("Tier Name");

        lblPoints.setText("Points");

        lblBenefits.setText("Benefits");

        btnEnterLoyalty.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEnterLoyalty.setText("Enter");
        btnEnterLoyalty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterLoyaltyActionPerformed(evt);
            }
        });

        btnClearPoints.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnClearPoints.setText("Clear");
        btnClearPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearPointsActionPerformed(evt);
            }
        });

        btnDeleteLoyalty.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteLoyalty.setText("Delete");
        btnDeleteLoyalty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteLoyaltyActionPerformed(evt);
            }
        });

        btnExitLoyalty.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnExitLoyalty.setForeground(new java.awt.Color(255, 0, 0));
        btnExitLoyalty.setText("Exit");
        btnExitLoyalty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitLoyaltyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblLoyaltyId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTierName, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(lblPoints, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtPoints, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTierName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLoyaltyId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                        .addGap(24, 24, 24))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(lblBenefits, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                                .addComponent(txtBenefits, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(btnEnterLoyalty)
                                .addGap(63, 63, 63)
                                .addComponent(btnClearPoints)
                                .addGap(57, 57, 57)
                                .addComponent(btnDeleteLoyalty)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnExitLoyalty)))
                        .addGap(22, 22, 22))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLoyaltyId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLoyaltyId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTierName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTierName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBenefits, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBenefits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnterLoyalty)
                    .addComponent(btnClearPoints)
                    .addComponent(btnDeleteLoyalty)
                    .addComponent(btnExitLoyalty))
                .addGap(16, 16, 16))
        );

        jTabbedPane1.addTab("loyalty Programs", jPanel5);

        jLabel6.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/icons8-money-50.png"))); // NOI18N
        jLabel6.setText("Rewards");

        lblRewardName.setText("Reward");

        lblDescribeReward.setText("Description");

        lblPointsRequired.setText("Points required");

        btnEnterReward.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEnterReward.setText("Enter");
        btnEnterReward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterRewardActionPerformed(evt);
            }
        });

        btnNextReward.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnNextReward.setText("Next");
        btnNextReward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextRewardActionPerformed(evt);
            }
        });

        btnDeleteReward.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteReward.setText("Delete");
        btnDeleteReward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRewardActionPerformed(evt);
            }
        });

        btnExitRewards.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnExitRewards.setForeground(new java.awt.Color(255, 0, 0));
        btnExitRewards.setText("Exit");
        btnExitRewards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitRewardsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblRewardName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPointsRequired, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDescribeReward, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(54, 54, 54)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtPointsRequired, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                                .addComponent(txtRewardName, javax.swing.GroupLayout.Alignment.TRAILING))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnEnterReward)
                        .addGap(51, 51, 51)
                        .addComponent(btnNextReward)
                        .addGap(53, 53, 53)
                        .addComponent(btnDeleteReward, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addComponent(btnExitRewards, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRewardName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRewardName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescribeReward, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPointsRequired)
                    .addComponent(lblPointsRequired, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnterReward)
                    .addComponent(btnNextReward)
                    .addComponent(btnDeleteReward)
                    .addComponent(btnExitRewards))
                .addGap(18, 18, 18))
        );

        jTabbedPane1.addTab("Rewards", jPanel6);

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/icons8-rolling-dice-48.png"))); // NOI18N
        jLabel1.setText("Games");

        lblGameId.setText("game id");

        lblGameName.setText("Game");

        lblMinBet.setText("Min Bet");

        lblMaxBet.setText("Max Bet");

        btnEnterGame.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEnterGame.setText("Enter");
        btnEnterGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterGameActionPerformed(evt);
            }
        });

        btnClearGame.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnClearGame.setText("Clear");
        btnClearGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearGameActionPerformed(evt);
            }
        });

        btnDeleteGame.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteGame.setText("Delete");
        btnDeleteGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteGameActionPerformed(evt);
            }
        });

        btnExitGame.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnExitGame.setForeground(new java.awt.Color(255, 0, 0));
        btnExitGame.setText("Exit");
        btnExitGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitGameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnEnterGame)
                                .addGap(31, 31, 31)
                                .addComponent(btnClearGame)
                                .addGap(45, 45, 45)
                                .addComponent(btnDeleteGame)
                                .addGap(56, 56, 56)
                                .addComponent(btnExitGame))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblMaxBet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblMinBet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblGameName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblGameId, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtGameId)
                                        .addComponent(txtGameName)
                                        .addComponent(txtMinBet, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE))
                                    .addComponent(txtMaxBet, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGameId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGameId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGameName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGameName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMinBet)
                    .addComponent(lblMinBet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaxBet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaxBet, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnterGame)
                    .addComponent(btnClearGame)
                    .addComponent(btnDeleteGame)
                    .addComponent(btnExitGame))
                .addGap(22, 22, 22))
        );

        jTabbedPane1.addTab("Games", jPanel1);

        btnHOME.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHOME.setForeground(new java.awt.Color(0, 255, 0));
        btnHOME.setText("Home");
        btnHOME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHOMEActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHOME)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHOME)
                    .addComponent(btnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        MainDashboard.MainDashboardMain();
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnHOMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHOMEActionPerformed
        CasinoWelcome.main(new String[]{});
    this.dispose();
    }//GEN-LAST:event_btnHOMEActionPerformed

    private void btnEnterBetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterBetActionPerformed
   // String betID = txtBetId.getText().trim();
    String customerID = txtCustomerId.getText();
    String amountStr = txtAmount.getText();
    String outcome = txtOutCome.getText().toLowerCase();
    String payoutStr = txtPayOut.getText();

    // Validate required fields
   // if (betID.isEmpty()) {
       // JOptionPane.showMessageDialog(this, "Enter the bet Id!");
       // txtBetId.requestFocus();
        //return;
   // }
    if (customerID.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Enter the Customer ID!");
        txtCustomerId.requestFocus();
        return;
    }
    if (amountStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Enter the Amount!");
        txtAmount.requestFocus();
        return;
    }
    if (outcome.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Enter the Outcome!");
        txtOutCome.requestFocus();
        return;
    }
    if (payoutStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Enter the Payout!");
        txtPayOut.requestFocus();
        return;
    }

    // Validate double fields
    double amount, payout;
    try {
        amount = Double.parseDouble(amountStr);
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Amount must be a number!");
        txtAmount.requestFocus();
        return;
    }
    try {
        payout = Double.parseDouble(payoutStr);
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Payout must be a number!");
        txtPayOut.requestFocus();
        return;
    }

    // Validate outcome enum
    if (!outcome.equals("win") && !outcome.equals("lose") && !outcome.equals("draw")) {
        JOptionPane.showMessageDialog(this, "Outcome must be 'win', 'lose', or 'draw'!");
        txtOutCome.requestFocus();
        return;
    }

    // Insert into DB
    try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "INSERT INTO BETS ( customer_id, amount, outcome, payout_amount) VALUES ( ?, ?, ?, ?)";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        //pst.setString(1, betID);
        pst.setString(1, customerID);
        pst.setDouble(2, amount);
        pst.setString(3, outcome);
        pst.setDouble(4, payout);

        int rows = pst.executeUpdate();
        if (rows > 0) {
            JOptionPane.showMessageDialog(this, "Bet entered successfully!");
            btnClearBetActionPerformed(null); // Clear fields
        } else {
            JOptionPane.showMessageDialog(this, "Failed to enter bet.");
        }
        pst.close();
        con.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Games.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_btnEnterBetActionPerformed

private void btnClearBetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearBetActionPerformed
   // txtBetId.setText("");
    txtCustomerId.setText("");
    txtAmount.setText("");
    txtOutCome.setText("");
    txtPayOut.setText("");
}//GEN-LAST:event_btnClearBetActionPerformed

private void btnDeleteBetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteBetActionPerformed
    String customerID = txtCustomerId.getText();
    if (customerID.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Enter the customer Id to delete!");
        txtCustomerId.requestFocus();
        return;
    }
    int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this bet?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) return;

    try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "DELETE FROM BETS WHERE customer_id = ?";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, customerID);
        int rows = pst.executeUpdate();
        if (rows > 0) {
            JOptionPane.showMessageDialog(this, "Bet deleted successfully!");
            btnClearBetActionPerformed(null);
        } else {
            JOptionPane.showMessageDialog(this, "No bet found with that ID.");
        }
        pst.close();
        con.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Games.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_btnDeleteBetActionPerformed

private void btnExitBetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitBetActionPerformed
    this.dispose();
}//GEN-LAST:event_btnExitBetActionPerformed

    private void btnTableINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTableINActionPerformed
      String TableId = txtTableId.getText();
      String Dealer = txtDealerId.getText();
      String Capacity = txtCapacity.getText();
      String Location = txtLocation.getText();
      String Status = txtStatus.getText();
      
      if(TableId.isEmpty()){
      JOptionPane.showMessageDialog(null,"Enter the Table id!!");
      txtTableId.requestFocus();
      return;
      }
      if(Dealer.isEmpty()){
      JOptionPane.showMessageDialog(null,"Enter the Dealer id!!");
       txtDealerId.requestFocus();
      return;
      }
      if( Capacity.isEmpty()){
      JOptionPane.showMessageDialog(null,"Enter the Table capacity!!");
      txtCapacity.requestFocus();
      return;
      }
      if(Location.isEmpty()){
      JOptionPane.showMessageDialog(null,"Enter the Table Location!!");
      txtLocation.requestFocus();
      return;
      }
      if(Status.isEmpty()){
      JOptionPane.showMessageDialog(null,"Enter the Table Status!!");
      txtStatus.requestFocus();
      return;
      }
      if (!Status.equals("Active") && !Status.equals("Closed") && !Status.equals("Maintenance")) {
        JOptionPane.showMessageDialog(this, "Status must be 'Active', 'Closed', or 'Maintenance'!");
        txtStatus.requestFocus();
        return;
    }
       try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "INSERT INTO CASINO_TABLES (table_id , dealer_id, seating_capacity, location, status) VALUES ( ?, ?, ?, ?, ?)";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, TableId);
        pst.setString(2,Dealer);
        pst.setString(3, Capacity);
        pst.setString(4, Location);
        pst.setString(5, Status);

        int rows = pst.executeUpdate();
        if (rows > 0) {
            JOptionPane.showMessageDialog(this, "Table entered successfully!");
            btnClearBetActionPerformed(null); // Clear fields
        } else {
            JOptionPane.showMessageDialog(this, "Failed to enter Table.");
        }
        pst.close();
        con.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Games.class.getName()).log(Level.SEVERE, null, ex);
    }
      
    }//GEN-LAST:event_btnTableINActionPerformed

    private void btnTableOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTableOutActionPerformed
     String TableId = txtTableId.getText();
    if (TableId.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Enter the Table id to delete a Table!");
        txtTableId.requestFocus();
        return;
    }
    
    int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this Table?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) return;

    try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "DELETE FROM CASINO_TABLES WHERE table_id = ?";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, TableId);
        int rows = pst.executeUpdate();
        if (rows > 0) {
            JOptionPane.showMessageDialog(this, "Table deleted successfully!");
           // btnClearBetActionPerformed(null);
        } else {
            JOptionPane.showMessageDialog(this, "No Table found with that ID.");
        }
        pst.close();
        con.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Games.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    }//GEN-LAST:event_btnTableOutActionPerformed

    private void btnTableExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTableExitActionPerformed
   this.dispose();
    }//GEN-LAST:event_btnTableExitActionPerformed

    private void btnEnterSlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterSlotActionPerformed
        String SlotId = txtSlotId.getText();
        String Location = txtSlotLocation.getText();
        String Status = txtSlotStatus.getText();
        String MaintenanceDate = txtMaintenanceDate.getText();
        
        if(SlotId.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the Slot Machine id");
        txtSlotId.requestFocus();
        return;
        }
         if(Location.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the Slot Machine Location ");
        txtSlotLocation.requestFocus();
        return;
         }
          if( Status.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the Slot Machine Status");
       txtSlotStatus.requestFocus();
        return;
         }
           if(MaintenanceDate.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the Slot Machine Maintenance Date");
       txtMaintenanceDate.requestFocus();
        return;
         }
         if (!Status.equals("Active") && !Status.equals("Maintenance") && !Status.equals("Out of Order")) {
        JOptionPane.showMessageDialog(this, "Status must be 'Active', 'Maintenance', or 'Out of Order'!");
        txtSlotStatus.requestFocus();
        return;
    }
         try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "INSERT INTO SLOT_MACHINES (slot_id , location, status, last_maintenance) VALUES ( ?, ?, ?, ?)";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, SlotId);
        pst.setString(2,Location);
        pst.setString(3, Status);
        pst.setString(4, MaintenanceDate);
        //pst.setString(5, Status);

        int rows = pst.executeUpdate();
        if (rows > 0) {
            JOptionPane.showMessageDialog(this, "Slot Machine entered successfully!");
            btnClearBetActionPerformed(null); // Clear fields
        } else {
            JOptionPane.showMessageDialog(this, "Failed to enter Slot Machine.");
        }
        pst.close();
        con.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Games.class.getName()).log(Level.SEVERE, null, ex);
    }
         
         
         
        
    }//GEN-LAST:event_btnEnterSlotActionPerformed

    private void btnDeleteSlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSlotActionPerformed
       String SlotId = txtSlotId.getText();
        if(SlotId.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the Slot Machine id to be Deleted");
        txtSlotId.requestFocus();
        return;
        }
         int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this Table?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) return;

    try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "DELETE FROM SLOT_MACHINES WHERE slot_id = ?";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, SlotId);
        int rows = pst.executeUpdate();
        if (rows > 0) {
            JOptionPane.showMessageDialog(this, "Slot Machine deleted successfully!");
           btnClearSlotActionPerformed(null);
        } else {
            JOptionPane.showMessageDialog(this, "No Slot Machine found with that ID.");
        }
        pst.close();
        con.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Games.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    }//GEN-LAST:event_btnDeleteSlotActionPerformed

    private void btnClearSlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearSlotActionPerformed
        txtSlotId.setText("");
         txtSlotLocation.setText("");
          txtSlotStatus.setText("");
           txtMaintenanceDate.setText("");
    }//GEN-LAST:event_btnClearSlotActionPerformed

    private void btnEnterLoyaltyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterLoyaltyActionPerformed
       String LoyaltyId = txtLoyaltyId.getText();
       String TierName = txtTierName.getText();
       String Points = txtPoints.getText();
       String Benefits = txtBenefits.getText();
       
       if(LoyaltyId.isEmpty()){
       JOptionPane.showMessageDialog(null, "enter the loyalty id!!");
       txtLoyaltyId.requestFocus();
       return;
       }
       if(TierName.isEmpty()){
       JOptionPane.showMessageDialog(null, "enter the Tier name!!");
       txtTierName.requestFocus();
       return;
       }
       if(Points.isEmpty()){
       JOptionPane.showMessageDialog(null, "enter the points earned!!");
       txtPoints.requestFocus();
       return;
       }
       if(Benefits.isEmpty()){
       JOptionPane.showMessageDialog(null, "enter the Benefits!!");
       txtBenefits.requestFocus();
       return;
       }
       try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "INSERT INTO LOYALTY_PROGRAMS (loyalty_id , tier_name, points_required, benefits) VALUES ( ?, ?, ?, ?)";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, LoyaltyId);
        pst.setString(2, TierName);
        pst.setString(3, Points);
        pst.setString(4, Benefits);
        //pst.setString(5, Status);

        int rows = pst.executeUpdate();
        if (rows > 0) {
            JOptionPane.showMessageDialog(this, "Loyalty program entered successfully!");
            btnClearPointsActionPerformed(null); // Clear fields
        } else {
            JOptionPane.showMessageDialog(this, "Failed to enter Loyalty Program.");
        }
        pst.close();
        con.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Games.class.getName()).log(Level.SEVERE, null, ex);
    }
         
         
         
       
    }//GEN-LAST:event_btnEnterLoyaltyActionPerformed

    private void btnClearPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearPointsActionPerformed
        txtLoyaltyId.setText("");
         txtTierName.setText("");
          txtPoints.setText("");
           txtBenefits.setText("");
        
    }//GEN-LAST:event_btnClearPointsActionPerformed

    private void btnDeleteLoyaltyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteLoyaltyActionPerformed
         String LoyaltyId = txtLoyaltyId.getText();
         
          if(LoyaltyId.isEmpty()){
       JOptionPane.showMessageDialog(null, "enter the loyalty program id to be deleted");
       txtLoyaltyId.requestFocus();
       return;
       }
     int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this Loyalty Program?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) return;

    try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "DELETE FROM LOYALTY_PROGRAMS WHERE loyalty_id = ?";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, LoyaltyId);
        int rows = pst.executeUpdate();
        if (rows > 0) {
            JOptionPane.showMessageDialog(this, "Loyalty Program deleted successfully!");
           btnClearPointsActionPerformed(null);
        } else {
            JOptionPane.showMessageDialog(this, "No Loyalty Program found with that ID.");
        }
        pst.close();
        con.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Games.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    }//GEN-LAST:event_btnDeleteLoyaltyActionPerformed

    private void btnExitLoyaltyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitLoyaltyActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExitLoyaltyActionPerformed

    private void btnExitRewardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitRewardsActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExitRewardsActionPerformed

    private void btnDeleteRewardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRewardActionPerformed
        String Reward = txtRewardName.getText();
        
         if(Reward.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the Reward to be deleted");
        txtRewardName.requestFocus();
        return;
        }
    int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this Reward?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) return;

    try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "DELETE FROM REWARDS WHERE reward_name = ?";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, Reward);
        int rows = pst.executeUpdate();
        if (rows > 0) {
            JOptionPane.showMessageDialog(this, "Reward deleted successfully!");
           //btnClearSlotActionPerformed(null);
        } else {
            JOptionPane.showMessageDialog(this, "No Reward found with that name.");
        }
        pst.close();
        con.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Games.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_btnDeleteRewardActionPerformed

    private void btnNextRewardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextRewardActionPerformed
           try {
            // Open connection and result set if not already open
            if (rs == null) {
                Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection(cs, user, password);
                st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                query = "SELECT reward_name, description, points_required FROM rewards ORDER BY reward_id";
                rs = st.executeQuery(query);
            }

            // If first time or after last, move to first
            if (rs.isAfterLast() || rs.isBeforeFirst()) {
                if (!rs.first()) {
                    JOptionPane.showMessageDialog(this, "No records found.");
                    return;
                }
            } else {
                // Move to next, if possible
                if (!rs.next()) {
                    JOptionPane.showMessageDialog(this, "No more records.");
                    rs.afterLast(); // Move cursor after last for next click
                    return;
                }
            }

            // Display current record
            //txtLogId.setText(rs.getString("log_id"));
            txtRewardName.setText(rs.getString("reward_name"));
            txtDescription.setText(rs.getString("description"));
            txtPointsRequired.setText(rs.getString("points_required"));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Games.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNextRewardActionPerformed

    private void btnEnterRewardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterRewardActionPerformed
        String Reward = txtRewardName.getText();
        String Description = txtDescription.getText();
        String PointsRequired = txtPointsRequired.getText();
        
        if(Reward.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the Reward");
        txtRewardName.requestFocus();
        return;
        }
         if(Description.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the Reward Description");
        txtDescription.requestFocus();
        return;
        }
         
        if(PointsRequired.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the Minimum Points Required");
       txtPointsRequired.requestFocus();
        return;
        }
        try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "INSERT INTO REWARDS ( reward_name, description, points_required) VALUES ( ?, ?, ?)";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, Reward);
        pst.setString(2, Description);
        pst.setString(3, PointsRequired);
       // pst.setString(4, Benefits);
        //pst.setString(5, Status);

        int rows = pst.executeUpdate();
        if (rows > 0) {
            JOptionPane.showMessageDialog(this, "Reward entered successfully!");
            btnClearPointsActionPerformed(null); // Clear fields
        } else {
            JOptionPane.showMessageDialog(this, "Failed to enter Reward.");
        }
        pst.close();
        con.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Games.class.getName()).log(Level.SEVERE, null, ex);
    }
         
        
        
    }//GEN-LAST:event_btnEnterRewardActionPerformed

    private void btnExitGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitGameActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExitGameActionPerformed

    private void btnEnterGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterGameActionPerformed
        String gameID = txtGameId.getText();
        String Game = txtGameName.getText();
        String MinBet = txtMinBet.getText();
        String MaxBet = txtMaxBet.getText();
         
        if(gameID.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the game Id");
        txtGameId.requestFocus();
        return;
        }
        if(Game.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the game name");
        txtGameName.requestFocus();
        return;
        }
        if(MinBet.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the game min bet");
        txtMinBet.requestFocus();
        return;
        }
        if(MaxBet.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the game max bet");
        txtMaxBet.requestFocus();
        return;
        }
    double minbet, maxbet;
    try {
        minbet = Double.parseDouble(MinBet);
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Min bet must be a number!");
        txtMinBet.requestFocus();
        return;
    }
    try {
        maxbet = Double.parseDouble(MaxBet);
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Max bet must be a number!");
        txtMaxBet.requestFocus();
        return;
    }
        
        try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "INSERT INTO GAMES ( game_id, game_name, min_bet, max_bet) VALUES ( ?, ?, ?, ?)";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, gameID);
        pst.setString(2, Game);
        pst.setDouble(3, minbet);
        pst.setDouble(4, maxbet);
        //pst.setString(5, Status);

        int rows = pst.executeUpdate();
        if (rows > 0) {
            JOptionPane.showMessageDialog(this, "Game entered successfully!");
            btnClearPointsActionPerformed(null); // Clear fields
        } else {
            JOptionPane.showMessageDialog(this, "Failed to enter Game.");
        }
        pst.close();
        con.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Games.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_btnEnterGameActionPerformed

    private void btnClearGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearGameActionPerformed
       txtGameId.setText("");
        txtGameName.setText("");
         txtMinBet.setText("");
          txtMaxBet.setText("");
       
    }//GEN-LAST:event_btnClearGameActionPerformed

    private void btnDeleteGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteGameActionPerformed
        String gameID = txtGameId.getText();
        
         if(gameID.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the game Id for the game to be deleted");
        txtGameId.requestFocus();
        return;
        }
    int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this Game?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) return;

    try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "DELETE FROM GAMES WHERE game_id = ?";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, gameID);
        int rows = pst.executeUpdate();
        if (rows > 0) {
            JOptionPane.showMessageDialog(this, "Game deleted successfully!");
           //btnClearSlotActionPerformed(null);
        } else {
            JOptionPane.showMessageDialog(this, "No Game found with that name.");
        }
        pst.close();
        con.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage());
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Games.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_btnDeleteGameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void MainGame() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Games.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Games.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Games.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Games.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Games().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClearBet;
    private javax.swing.JButton btnClearGame;
    private javax.swing.JButton btnClearPoints;
    private javax.swing.JButton btnClearSlot;
    private javax.swing.JButton btnDeleteBet;
    private javax.swing.JButton btnDeleteGame;
    private javax.swing.JButton btnDeleteLoyalty;
    private javax.swing.JButton btnDeleteReward;
    private javax.swing.JButton btnDeleteSlot;
    private javax.swing.JButton btnEnterBet;
    private javax.swing.JButton btnEnterGame;
    private javax.swing.JButton btnEnterLoyalty;
    private javax.swing.JButton btnEnterReward;
    private javax.swing.JButton btnEnterSlot;
    private javax.swing.JButton btnExitBet;
    private javax.swing.JButton btnExitGame;
    private javax.swing.JButton btnExitLoyalty;
    private javax.swing.JButton btnExitRewards;
    private javax.swing.JButton btnHOME;
    private javax.swing.JButton btnNextReward;
    private javax.swing.JButton btnTableExit;
    private javax.swing.JButton btnTableIN;
    private javax.swing.JButton btnTableOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblAmount;
    private javax.swing.JLabel lblBenefits;
    private javax.swing.JLabel lblCustomerId;
    private javax.swing.JLabel lblDealerId;
    private javax.swing.JLabel lblDescribeReward;
    private javax.swing.JLabel lblGameId;
    private javax.swing.JLabel lblGameName;
    private javax.swing.JLabel lblLocation;
    private javax.swing.JLabel lblLocationSlot;
    private javax.swing.JLabel lblLoyaltyId;
    private javax.swing.JLabel lblMaintenance;
    private javax.swing.JLabel lblMaxBet;
    private javax.swing.JLabel lblMinBet;
    private javax.swing.JLabel lblOutCome;
    private javax.swing.JLabel lblPayOut;
    private javax.swing.JLabel lblPoints;
    private javax.swing.JLabel lblPointsRequired;
    private javax.swing.JLabel lblRewardName;
    private javax.swing.JLabel lblSlotId;
    private javax.swing.JLabel lblSlotStatus;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTableCapacity;
    private javax.swing.JLabel lblTableId;
    private javax.swing.JLabel lblTierName;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtBenefits;
    private javax.swing.JTextField txtCapacity;
    private javax.swing.JTextField txtCustomerId;
    private javax.swing.JTextField txtDealerId;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtGameId;
    private javax.swing.JTextField txtGameName;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtLoyaltyId;
    private javax.swing.JTextField txtMaintenanceDate;
    private javax.swing.JTextField txtMaxBet;
    private javax.swing.JTextField txtMinBet;
    private javax.swing.JTextField txtOutCome;
    private javax.swing.JTextField txtPayOut;
    private javax.swing.JTextField txtPoints;
    private javax.swing.JTextField txtPointsRequired;
    private javax.swing.JTextField txtRewardName;
    private javax.swing.JTextField txtSlotId;
    private javax.swing.JTextField txtSlotLocation;
    private javax.swing.JTextField txtSlotStatus;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtTableId;
    private javax.swing.JTextField txtTierName;
    // End of variables declaration//GEN-END:variables
}
