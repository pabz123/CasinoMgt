/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package casino.ui;

import javax.swing.JOptionPane;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author PRECIOUS
 */
public class Security extends javax.swing.JFrame {
    Connection con;
    Statement st;
    String cs;
    String user;
    String password;
    String query;

    // For navigation
    private ResultSet rs = null;

    /**
     * Creates new form Security
     */
    public Security() {
         con = null;
        st = null;
        cs = "jdbc:mysql://localhost:3306/casino_db";
        user = "root";
        password = "";
        
        initComponents();
        setTitle("Security Survillance");
        
        setLocationRelativeTo(null);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainBackgroundPanel = new BackgroundPanel("/resources/casino_bg.png");
        btnHome = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblLogId = new javax.swing.JLabel();
        lblEventType = new javax.swing.JLabel();
        lblDescription = new javax.swing.JLabel();
        btnEnterLog = new javax.swing.JButton();
        btnDeleteLog = new javax.swing.JButton();
        btnNextLog = new javax.swing.JButton();
        btnExitLog = new javax.swing.JButton();
        txtLogId = new javax.swing.JTextField();
        txtEventType = new javax.swing.JTextField();
        txtDescription = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        lblAccessId = new javax.swing.JLabel();
        lblEntryTime = new javax.swing.JLabel();
        lblExitTime = new javax.swing.JLabel();
        lblAreaAccessed = new javax.swing.JLabel();
        btnNextAccess = new javax.swing.JButton();
        btnExitAccess = new javax.swing.JButton();
        txtAccessId = new javax.swing.JTextField();
        txtEntryTime = new javax.swing.JTextField();
        txtExitTime = new javax.swing.JTextField();
        txtAccessedArea = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnEnterAccess = new javax.swing.JButton();
        btnDeleteAccess = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        lblCamera = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        lblActivity = new javax.swing.JLabel();
        txtCameraNo = new javax.swing.JTextField();
        txtStatus = new javax.swing.JTextField();
        txtActivity = new javax.swing.JTextField();
        btnNext = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainBackgroundPanel.setOpaque(false);

        javax.swing.GroupLayout MainBackgroundPanelLayout = new javax.swing.GroupLayout(MainBackgroundPanel);
        MainBackgroundPanel.setLayout(MainBackgroundPanelLayout);
        MainBackgroundPanelLayout.setHorizontalGroup(
            MainBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        MainBackgroundPanelLayout.setVerticalGroup(
            MainBackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 373, Short.MAX_VALUE)
        );

        btnHome.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHome.setForeground(new java.awt.Color(51, 255, 0));
        btnHome.setText("Home");
        btnHome.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                btnHomeComponentRemoved(evt);
            }
        });
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/icons8-security-guard-50.png"))); // NOI18N
        jLabel1.setText("Security Logs");

        lblLogId.setText("Log ID");

        lblEventType.setText("Event Type");

        lblDescription.setText("Description");

        btnEnterLog.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEnterLog.setText("Enter");
        btnEnterLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterLogActionPerformed(evt);
            }
        });

        btnDeleteLog.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteLog.setText("Delete");
        btnDeleteLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteLogActionPerformed(evt);
            }
        });

        btnNextLog.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnNextLog.setText("Next");
        btnNextLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextLogActionPerformed(evt);
            }
        });

        btnExitLog.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnExitLog.setForeground(new java.awt.Color(255, 0, 0));
        btnExitLog.setText("Exit");
        btnExitLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitLogActionPerformed(evt);
            }
        });

        txtDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescriptionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnEnterLog)
                        .addGap(44, 44, 44)
                        .addComponent(btnDeleteLog)
                        .addGap(42, 42, 42)
                        .addComponent(btnNextLog)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExitLog)
                        .addGap(17, 17, 17))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblLogId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblEventType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEventType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDescription, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLogId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(184, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLogId, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLogId, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEventType, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEventType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEnterLog)
                    .addComponent(btnDeleteLog)
                    .addComponent(btnNextLog)
                    .addComponent(btnExitLog))
                .addGap(18, 18, 18))
        );

        jTabbedPane1.addTab("Security Logs", jPanel3);

        lblAccessId.setText("Access ID");

        lblEntryTime.setText("Entry Time");

        lblExitTime.setText("Exit Time");

        lblAreaAccessed.setText("Area Accessed");

        btnNextAccess.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnNextAccess.setText("Next");
        btnNextAccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextAccessActionPerformed(evt);
            }
        });

        btnExitAccess.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnExitAccess.setForeground(new java.awt.Color(255, 0, 0));
        btnExitAccess.setText("Exit");
        btnExitAccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitAccessActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/icons8-id-verified-48.png"))); // NOI18N
        jLabel6.setText("Access Logs");

        btnEnterAccess.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEnterAccess.setText("Enter");
        btnEnterAccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterAccessActionPerformed(evt);
            }
        });

        btnDeleteAccess.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteAccess.setText("Delete");
        btnDeleteAccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAccessActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnNextAccess)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addComponent(btnEnterAccess)
                        .addGap(64, 64, 64)
                        .addComponent(btnDeleteAccess)
                        .addGap(84, 84, 84)
                        .addComponent(btnExitAccess, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblExitTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblEntryTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblAreaAccessed, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
                            .addComponent(lblAccessId, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEntryTime)
                            .addComponent(txtExitTime)
                            .addComponent(txtAccessedArea)
                            .addComponent(txtAccessId))))
                .addGap(56, 56, 56))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jSeparator1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblAccessId, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(lblEntryTime, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtAccessId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtEntryTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblExitTime, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtExitTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAreaAccessed, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(txtAccessedArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNextAccess)
                    .addComponent(btnExitAccess)
                    .addComponent(btnEnterAccess)
                    .addComponent(btnDeleteAccess))
                .addGap(14, 14, 14))
        );

        jTabbedPane1.addTab("Access Logs", jPanel2);

        lblCamera.setText("Camera No");

        lblStatus.setText("Status");

        lblActivity.setText("Activity");

        txtActivity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtActivityActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnExit.setForeground(new java.awt.Color(255, 0, 0));
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/icons8-surveillance-camera-64.png"))); // NOI18N
        jLabel5.setText("Survillance");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblCamera, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblActivity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtActivity, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCameraNo, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(79, 79, 79))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExit)
                        .addGap(66, 66, 66))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCamera, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCameraNo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblActivity, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(txtActivity, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNext)
                    .addComponent(btnExit))
                .addGap(17, 17, 17))
        );

        jTabbedPane1.addTab("Survillance", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHome)
                .addGap(17, 17, 17))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MainBackgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHome)
                    .addComponent(btnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(MainBackgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescriptionActionPerformed

    private void txtActivityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtActivityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtActivityActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        CasinoWelcome.main(new String[]{});
    this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnHomeComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_btnHomeComponentRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHomeComponentRemoved

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        MainDashboard.MainDashboardMain();
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnEnterLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterLogActionPerformed
        String LogId = txtLogId.getText();
        String EventType = txtEventType.getText();
       // String Duration = txtDuration.getText();
        String Description = txtDescription.getText();
        
        if(LogId.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the security log id");
        txtLogId.requestFocus();
        return;
        }
        if(EventType.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the security Event Type");
        txtEventType.requestFocus();
        return;
        }
        
        if(Description.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the security report");
        txtDescription.requestFocus();
        return;
        }
        try{
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "INSERT INTO security_logs(log_id, event_type, description) VALUES (?, ?, ?) ";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, LogId);
        pst.setString(2, EventType);
        pst.setString(3, Description);
        
        int rows = pst.executeUpdate();
        if(rows > 0){
        JOptionPane.showMessageDialog(null, "Security Log entered successfully");
        }else{
        JOptionPane.showMessageDialog(null, "FAILED to enter the security");
        }
        pst.close();
        con.close();
        
        }catch(SQLException ex){
        JOptionPane.showMessageDialog(this, "SQL Error : " + ex.getMessage());
        }catch(ClassNotFoundException ex){
        Logger.getLogger(Security.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnEnterLogActionPerformed

    private void btnDeleteLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteLogActionPerformed
        String LogId = txtLogId.getText();
        if(LogId.isEmpty()){
        JOptionPane.showMessageDialog(null, "enter the log id for the security log to be deleted");
        txtLogId.requestFocus();
        return;
        }
    int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this Security Log?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) return;
    
    try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "DELETE FROM security_logs WHERE log_id = ?";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, LogId);
        int rows = pst.executeUpdate();
        if(rows > 0){
            JOptionPane.showMessageDialog(this, "Security log deleted successfully!");
        }else{
        JOptionPane.showMessageDialog(null, "FAILED to deleted the security Log");}
        pst.close();
        con.close();
       }catch (SQLException ex){
        JOptionPane.showMessageDialog(this, "SQL Error :" + ex.getMessage());  
        }catch(ClassNotFoundException ex){
        Logger.getLogger(Security.class.getName()).log(Level.SEVERE,null,ex);       }
                
                
                
       
    
    
    
    }//GEN-LAST:event_btnDeleteLogActionPerformed

    private void btnNextLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextLogActionPerformed
         try {
            // Open connection and result set if not already open
            if (rs == null) {
                Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection(cs, user, password);
                st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                query = "SELECT log_id, event_type, description FROM security_logs  ORDER BY log_id";
                rs = st.executeQuery(query);
            }

            // If first time or after last, move to first
            if (rs.isAfterLast() || rs.isBeforeFirst()) {
                if (!rs.first()) {
                    JOptionPane.showMessageDialog(this, "No records found.");
                    return;
                }
            } else {
                // Move to next, if possible
                if (!rs.next()) {
                    JOptionPane.showMessageDialog(this, "No more records.");
                    rs.afterLast(); // Move cursor after last for next click
                    return;
                }
            }

            // Display current record
            txtLogId.setText(rs.getString("log_id"));
            txtEventType.setText(rs.getString("event_type"));
            txtDescription.setText(rs.getString("description"));
            //txtPointsRequired.setText(rs.getString("points_required"));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Security.class.getName()).log(Level.SEVERE, null, ex);
        }
                              
    }//GEN-LAST:event_btnNextLogActionPerformed

    private void btnExitLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitLogActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExitLogActionPerformed

    private void btnNextAccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextAccessActionPerformed
             try {
            // Open connection and result set if not already open
            if (rs == null) {
                Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection(cs, user, password);
                st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                query = "SELECT access_id, entry_time, exit_time, area_accessed FROM access_logs ";
                rs = st.executeQuery(query);
            }

            // If first time or after last, move to first
            if (rs.isAfterLast() || rs.isBeforeFirst()) {
                if (!rs.first()) {
                    JOptionPane.showMessageDialog(this, "No records found.");
                    return;
                }
            } else {
                // Move to next, if possible
                if (!rs.next()) {
                    JOptionPane.showMessageDialog(this, "No more records.");
                    rs.afterLast(); // Move cursor after last for next click
                    return;
                }
            }

            // Display current record
            txtAccessId.setText(rs.getString("access_id"));
            txtEntryTime.setText(rs.getString("entry_time"));
            txtExitTime.setText(rs.getString("exit_time"));
            txtAccessedArea.setText(rs.getString("area_accessed"));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Security.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNextAccessActionPerformed

    private void btnEnterAccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterAccessActionPerformed
         String AccessID = txtAccessId.getText();
        String ExitTime = txtExitTime.getText();
        String EntryTime = txtEntryTime.getText();
        String AreaAccessed = txtAccessedArea.getText();
        
        if(AccessID.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the security Access id");
        txtAccessId.requestFocus();
        return;
        }
        if(ExitTime.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the Exit Time");
        txtExitTime.requestFocus();
        return;
        }
        
        if(AreaAccessed.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the Area Accessed");
        txtAccessedArea.requestFocus();
        return;
        }
        try{
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "INSERT INTO access_logs(access_id, exit_time, area_accessed) VALUES (?, ?, ?) ";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, AccessID);
        pst.setString(2, ExitTime);
        pst.setString(3, AreaAccessed);
        
        int rows = pst.executeUpdate();
        if(rows > 0){
        JOptionPane.showMessageDialog(null, "Access Log entered successfully");
        }else{
        JOptionPane.showMessageDialog(null, "FAILED to enter the access log");
        }
        pst.close();
        con.close();
        
        }catch(SQLException ex){
        JOptionPane.showMessageDialog(this, "SQL Error : " + ex.getMessage());
        }catch(ClassNotFoundException ex){
        Logger.getLogger(Security.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEnterAccessActionPerformed

    private void btnDeleteAccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAccessActionPerformed
        String AccessId = txtAccessId.getText();
         if(AccessId.isEmpty()){
        JOptionPane.showMessageDialog(null, "Enter the security Access id for the Access Log to be deleted");
        txtAccessId.requestFocus();
        return;
        }
    int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this Access Log?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) return;
    
    try {
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection(cs, user, password);
        String sql = "DELETE FROM access_logs WHERE access_id = ?";
        java.sql.PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, AccessId);
        int rows = pst.executeUpdate();
        if(rows > 0){
            JOptionPane.showMessageDialog(this, "Access log deleted successfully!");
        }else{
        JOptionPane.showMessageDialog(null, "FAILED to deleted the access Log");}
        pst.close();
        con.close();
       }catch (SQLException ex){
        JOptionPane.showMessageDialog(this, "SQL Error :" + ex.getMessage());  
        }catch(ClassNotFoundException ex){
        Logger.getLogger(Security.class.getName()).log(Level.SEVERE,null,ex);       }
                
        
    }//GEN-LAST:event_btnDeleteAccessActionPerformed

    private void btnExitAccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitAccessActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExitAccessActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        try {
            // Open connection and result set if not already open
            if (rs == null) {
                Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection(cs, user, password);
                st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                query = "SELECT Camera_no, Status, event_type FROM security_logs ";
                rs = st.executeQuery(query);
            }

            // If first time or after last, move to first
            if (rs.isAfterLast() || rs.isBeforeFirst()) {
                if (!rs.first()) {
                    JOptionPane.showMessageDialog(this, "No records found.");
                    return;
                }
            } else {
                // Move to next, if possible
                if (!rs.next()) {
                    JOptionPane.showMessageDialog(this, "No more records.");
                    rs.afterLast(); // Move cursor after last for next click
                    return;
                }
            }

            // Display current record
            txtCameraNo.setText(rs.getString("Camera_no"));
            txtStatus.setText(rs.getString("Status"));
            txtActivity.setText(rs.getString("event_type"));
           // txtDescription.setText(rs.getString("description"));
            //txtPointsRequired.setText(rs.getString("points_required"));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Security.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void SecurityMain() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Security.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Security.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Security.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Security.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Security().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MainBackgroundPanel;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteAccess;
    private javax.swing.JButton btnDeleteLog;
    private javax.swing.JButton btnEnterAccess;
    private javax.swing.JButton btnEnterLog;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnExitAccess;
    private javax.swing.JButton btnExitLog;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnNextAccess;
    private javax.swing.JButton btnNextLog;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblAccessId;
    private javax.swing.JLabel lblActivity;
    private javax.swing.JLabel lblAreaAccessed;
    private javax.swing.JLabel lblCamera;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblEntryTime;
    private javax.swing.JLabel lblEventType;
    private javax.swing.JLabel lblExitTime;
    private javax.swing.JLabel lblLogId;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txtAccessId;
    private javax.swing.JTextField txtAccessedArea;
    private javax.swing.JTextField txtActivity;
    private javax.swing.JTextField txtCameraNo;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtEntryTime;
    private javax.swing.JTextField txtEventType;
    private javax.swing.JTextField txtExitTime;
    private javax.swing.JTextField txtLogId;
    private javax.swing.JTextField txtStatus;
    // End of variables declaration//GEN-END:variables
}
